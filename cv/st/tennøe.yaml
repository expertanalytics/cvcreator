Basic:
    Name:  Simen Tennøe
    Address: Larsbråtveien 207
    Post: "0674 Oslo"
    Birth: "19.09.1987"
    Email: "simen@xal.no"
    Phone: "47397531"
    Nationality: "Norwegian"
Summary: >
    I am a computational scientist with a broad education in computational
    physics and computational neuroscience. I have much experience with
    learning new disciplines and enjoy using the computer to solve complex
    problems, create models and numerical simulations and perform data analysis.
Skills:
    Languages:
        - "Python"
        - "C++"
        - "Matlab"
        - Fortran
        - C
    Frameworks:
        - "Matplotlib"
        - "NumPy/SciPy"
        - "Pandas"
        - "Scikit-Learn"
        - "XGBoost"
        - "MPI"
    Tools:
        - "Git"
        - "Docker"
        - "LaTeX"
        - "Linux"
        - "DocOnce"
        - "Confluence"
        - "Jira"
Languages:
    "Norwegian": "Native"
    "English": "Fluent"
    "German": "Basic"
Education:
    - - "2014"
      - "2019"
      - >
        \textbf{Ph.D.}
        Working with computational neuroscience at the University of Oslo.
        My work was focused on quantifying uncertainties in computational models of
        neurons and neural networks.
        Towards this end I have created a Python toolbox,
        found on \href{https://github.com/simetenn/uncertainpy}{Github},
        tailored for performing these calculations in neuroscience.
        My Ph.D. work also includes learning new subjects,
        tools, and techniques as necessary,
        as well as presenting my work in a wide variety of settings.
    - - "2011"
      - "2013"
      - >
        \textbf{Master of Astronomy.}
        I specialized in numerical astrophysics and cosmology.
        I developed software ``from scratch'' in C++ that compares the results
        from large-scale N-body simulations of the universe with observational data.
        This problem is computationally intensive and the work included
        implementing advanced clustering algorithms,
        parallelization using MPI, and large-scale data analysis.
    - - "2007"
      - "2010"
      - >
        \textbf{Bachelor of Physics, Astronomy and Meteorology} Specialization in physics.
Work:
    - - "2019"
      - ""
      - >
        \textbf{Consultant} at Expert Analytics AS.
    - - "2014"
      - "2019"
      - >
        \textbf{Ph.D.} See education section above.
    - - "2014"
      - >
        \textbf{Software engineer at Schlumberger.} I worked on developing software
        (Petrel) in C++ for modeling in oil and gas reservoirs.
    - - "2013, 2009, 2008"
      - >
        \textbf{Teaching assistant at the University of Oslo}
        in a Python programming course -
        \href{http://www.uio.no/studier/emner/matnat/ifi/INF1100/}{``Introduction to programming with scientific applications''}.
        The work of a teaching assistant is to manage a class of students in
        their work with weekly compulsory programming projects.
        Additionally I corrected about 100 exercises from students every week.
    - - "2012, 2011"
      - >
       \textbf{Summer job at the Institute of Theoretical Astrophysics at the University of Oslo}.
        The first year I performed data reduction on a set of
        astronomical images and created software to automate the process (2011).
        The second year I implemented support for parallelization, using MPI,
        for what turned into the software I developed during my master (2012).

Projects:
    A1:
        Activity: Developing software for predicting targets for cancer immunotherapy.
        Period: "2019 -- "
        Role: Data Scientist
        Staffing: 20 Developers/Data Scientists/Bioinformaticians
        Description: >
            The company develops bioinformatics software for predicting
            tumor targets, for use in precision cancer immunotherapy.
            The goal is to select the best targets in the patients tumor,
            from genomic data, to be used in cancer immunotherapy.
            My role is to develop machine-learning methods applied to genomic
            data for predicting the end result of various biological processes.
        Tools: Python, Keras/Tensorflow, Numpy, Pandas, Scikit-learn, and XGBoost
    A2:
        Activity: "Ph.D.: Uncertainty quantification in neuroscience."
        Period: "2014 -- 2019"
        Role: "Researcher and developer" #"Ph.D. student"
        Staffing: 1 researcher
        Volume: 75\%
        Description: >
            In my Ph.D. I created a Python toolbox
            tailored to perform uncertainty quantification and sensitivity analysis
            of computational neuroscience models.
            The toolbox implements both quasi-Monte Carlo methods
            and polynomial chaos expansions.
            It also calculate the uncertainty and sensitivity of
            salient model response features.
        Tools: "Python, Numpy, Docker, Travis, and Git"
    A3:
        Activity: "Writing a textbook teaching first year biology students programming and computational modeling."
        Period: "2014 -- 2019"
        Role: "Author"
        Staffing: 4 researchers
        Volume: 25\%
        Description: >
            I co-authored a textbook titled
            ``Introduction to analysis and modeling in biology with Python'',
            that adress the general lack of computational education in biology.
            This textbook is used as curriculum in the course
            \href{www.uio.no/studier/emner/matnat/ibv/BIOS1100}{``BIOS1100 -- Introduction to computational models for the biosciences''}.
            The book is project based, and the students are introduced to various biological
            problems and use programming to solve these problems.
            All programming happens in the context of biology.
            The philosophy behind the textbook is just-in-time teaching,
            and programming concepts are only introduced when they are needed to solve a given
            problem.
            The book is written using DocOnce,
            which enables us to give the students the book as both a traditional pdf,
            as well as interactive Jupyter Notebooks.
        Tools: "DocOnce, Python, Jupyter Notebook, and Git"