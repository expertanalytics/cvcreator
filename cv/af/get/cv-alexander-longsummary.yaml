Basic:
    Name:   "Alexander Fleischer"
    Address: "Lindebergveien 7A"
    Post:  "1069 Oslo"
    Birth: "10.04.1991"
    Email: "alexander@xal.no"
    Phone: "+47 482 71 967"
    Nationality: "Norwegian"
Summary: >
    In 2018, I received my master's thesis in computational physics. 
    The objective of the thesis was building a C++ application for 
    simulating quantum dots. 
    My goal was to develop code that was up to par with industry standards and
    I focused on writing good, readable code with extensive testing. 
    In addition to C++ I used Python for data analysis.
    As a developer, I've cultivated my Python skills, 
    and I now have ten years of experience with Python. 
    Since February 2018, I have been working on a project at the transit
    administration company Ruter.
Skills:
    Languages:
        - "Python" 
        - "C"
        - "C++" 
        - "PostgreSQL"
        - "Javascript"
        - "Java"
        - "MATLAB"
        - "Bash"
        - "PHP"
    Frameworks:
        - "Numpy"
        - "Flask"
        - "Armadillo"
        - "Google OR-tools"
        - "PyPDF"
        - "Reportlab"
        - "uWSGI"
        - "Pandas"
        - "Node/React"
        - "Unittest"
        - "MPI"
    Tools:
        - "Git"
        - "Vim editor"
        - "Unix"
        - "LaTeX"
        - "Docker"
Languages:
    Norwegian: Mother tongue
    English: Fluent
SelectedSkills:
    Programming: >
        During my education, practically every subject involved some
        form of programming and I also enjoy recreational programming 
        and scripting.
    Quick learner: >
        I like to learn, and do so quickly, in particular about programming 
        and science.
    Problem solving: >
        Both my current project, previous work experience and my master 
        thesis has taught me to work independently and assess the task at hand.
    Written communication: >
        I like writing clear and concise texts. 
        Everything from popular science to documenting code.
Education:
    - - 2018
      - 'M.Sc. Computational Physics from the Department of
        Physics, University of Oslo. Title of thesis: 
        "Monte Carlo Studies of Quantum Dots". 
        Supervisor: Professor Morten Hjorth-Jensen.'
    - - 2017
      - 'B.Sc. in Physics, University of Oslo.'
Work:
    - - 2018–
      - 'Consultant at Expert Analytics'
    - - 2015–2017
      - '30\\% IT Support at the Department of Physics, University of Oslo'
    - - 2013–2017
      - 'Course Leader at Forskerfabrikken Summer School'
    - - 2013–2014
      - 'Private Tutor at Studenthjelp privatundervisning'
Projects:
    A1:
        Activity: "Stop Poster Production System, Ruter As"
        Role: "Developer"
        Staffing: "1 developer"
        Period: "February 2018—March 2020"
        Description: >
            The \"Stop Poster Production System\" is Ruter's application for 
            automated generation of production files (PDFs) for 
            analogue transit information. Ruter governs over 8000 transit
            stops in Oslo and Viken. All of these stops require some
            level of information, and most of the stops do not have
            digital displays. Thus the need for automatic generation of
            production files, which were previously made manually.
            The applications main purpose is to generate stop posters
            containing timetables, maps, ticket information and so forth.
            This means keeping track of what kind of information should be
            displayed on the stop and what kind of infrastructure
            exists.
            I further developed and refactored the backend system 
            and expanded the application to a self-service website for 
            easily generating and distributing large quantities of stop 
            posters at a time. In addition to the stop poster generation, 
            I implemented automatic generation of other types of analogue 
            information, like name signs.
            The backend is written in Python and the website was 
            developed with the Python micro-framework Flask and 
            hosted using Apache.
            I also implemented a system for automatically generating
            optimal distribution routes between stops using
            Google OR-tools and the Google maps API.
        Tools: >
            Python, Javascript, Flask, PostgreSQL, Apache, Google OR-Tools,
            Google Maps API, Entur API
    A2:
        Activity: "RuterStopps, Ruter As"
        Role: "Developer/adviser"
        Staffing: "3 developers, 1 team lead, 1 UX/UI designer"
        Period: "January 2019—March 2020"
        Description: >
            RuterStopps is a content management system developed by Ruter.
            Its main purpose is to gather all data relevant to transit
            stops managed by Ruter from various sources and display it
            in a React web app. This includes everything from information 
            about the transit routes that operate the stop, to detailed
            information about building projects, contracts and assets.
            In addition to some development (Node/React), 
            I advised the team on the direction of the project,
            performed daily code review and contributed to sprint 
            retrospects and planning.
            RuterStopps evolved out of my main project described above.
        Tools: "Javascript/Node, React, PostgreSQL, AWS, Jenkins, Python"
    A3:
        Activity: "Monte Carlo Studies of Quantum Dots"
        Staffing: "2 researchers"
        Description: >
            For my master thesis, I developed software for finding the ground 
            state energies of quantum dots (fermions) using the variational 
            Monte-Carlo method. The program handles different potential wells, 
            like the single and double
            harmonic oscillator and the finite square well.
            Furthermore I solved the Schrödinger equation of the potential 
            systems to obtain one-particle wavefunctions of the energy states.
            The resulting wavefunction was then written as a linear combination 
            of simple harmonic oscillator basisfunctions which were used in the 
            Monte-Carlo solver and compared against the results of the original 
            Monte-Carlo simulations.
            The code was primarily C++ with some data analysis in Python.
            I put effort and focus on unit testing and writing clean code.
        Tools: "C++, Python, Armadillo, MPI, Numpy"
